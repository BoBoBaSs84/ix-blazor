window.siemensIXInterop={async initialize(){await applyPolyfills(),await ixIconsDefineCustomElements(),await defineCustomElements()},showMessage(e){try{const t=JSON.parse(e);toast(t)}catch(e){console.error("Failed to display toast message:",e)}},initializeChart(e,t){try{const i=document.getElementById(e);if(!i)throw new Error(`Element with ID ${e} not found`);registerTheme(echarts),echarts.init(i,window.demoTheme).setOption(JSON.parse(t))}catch(e){console.error("Failed to initialize chart:",e)}},setTheme(e){themeSwitcher.setTheme(e)},toggleTheme(){themeSwitcher.toggleMode()},toggleSystemTheme(e){e?themeSwitcher.setVariant():console.warn("System theme switching is disabled.")},agGridInterop:{dotnetReference:null,createGrid(e,t,i){const n=JSON.parse(i);return this.dotnetReference=e,n.onCellClicked=t=>{e.invokeMethodAsync("OnCellClickedCallback",t.data)},new Grid(document.getElementById(t),n)},setData(e,t){e.gridOptions.api.setRowData(t)},getSelectedRows:e=>e.gridOptions.api.getSelectedRows(),dispose(){this.dotnetReference=null}}},(async()=>{await siemensIXInterop.initialize()})();